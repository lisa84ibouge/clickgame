{"version":3,"sources":["logo.svg","components/card/index.jsx","components/board/index.jsx","images.js","deck.js","serviceWorker.js","index.js","App.jsx"],"names":["module","exports","__webpack_require__","p","Card","_ref","handleClick","id","type","flipped","solved","height","width","disabled","console","log","react_default","a","createElement","className","concat","style","onClick","src","image","Board","dimension","cards","map","card","i","key","includes","countryFlags","name","initializeDeck","flags","shuffled_cards","array","_array","slice","length","randomIndex","Math","floor","random","temp","shuffle","reduce","acc","push","Boolean","window","location","hostname","match","ReactDOM","render","App","_useState","useState","_useState2","Object","slicedToArray","setCards","_useState3","_useState4","setFlipped","_useState5","_useState6","setDimension","_useState7","_useState8","setSolved","_useState9","_useState10","setDisabled","useEffect","resizeBoard","preloadImages","resizeListener","addEventListener","removeEventListener","Image","resetCards","sameCardClicked","isMatch","clickedCard","find","min","document","documentElement","clientWidth","clientHeight","toConsumableArray","setTimeout","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b3ca922.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types'\n//import images from './images'\nimport './styles.css'\n\n\n\nexport default function Card({\n    handleClick,\n    id,\n    type,\n    flipped,\n    solved,\n    height,\n    width, \n    disabled\n}) {\nconsole.log('type:', type);\n    return ( \n        <div \n        className = {`flip-container ${flipped ? 'flipped' : ''} `\n        }\n        style = {\n            {\n                width,\n                height\n            }\n        }\n        onClick = {\n            () => disabled ? null : handleClick(id)\n        } >\n        <div \n        className = \"flipped\" >\n        <img style = {\n            {\n                height,\n                width\n            }\n        }\n            className = {\n            flipped ? 'front' : 'back'\n        }\n        src = {\n            flipped || solved ? `${type.image}` : `img/back.jpg`\n        }\n        /> </div>  </div>\n    )\n}\n\n\n\nCard.propTypes = {\n    handleClick: PropTypes.func.isRequired,\n    id: PropTypes.number.isRequired,\n    flipped: PropTypes.bool.isRequired,\n    solved: PropTypes.bool.isRequired,\n    type: PropTypes.string.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    disabled: PropTypes.bool.isRequired,\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './styles.css'\n\nimport Card from '../card'\n\nexport default function Board({ disabled, dimension, cards, flipped, solved, handleClick}) {\n    return (<div className=\"Board\">\n        {cards.map((card, i) =>( \n            \n     <Card\n    key = {i}\n    id={card.id}\n    type={card.type}\n    width={dimension / 3}\n    height={dimension / 3}\n    flipped={flipped.includes(card.id)}\n    solved={solved.includes(card.id)}\n    handleClick={handleClick}\n    disabled={disabled || solved.includes(card.id)}\n\n    />))\n        }\n    </div>\n    )\n}\n\nBoard.propTypes = {\n    disabled: PropTypes.bool.isRequired,\n    dimension: PropTypes.number.isRequired,\n    cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\n    solved: PropTypes.arrayOf(PropTypes.number).isRequired,\n    handleClick: PropTypes.func.isRequired,\n\n}","export const countryFlags = [\n    {\n      \"id\": 1,\n      \"name\": \"Afghanistan\",\n      \"image\": \"img/flag-of-Afghanistan.png\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Albania\",\n      \"image\": \"img/flag-of-Albania.png\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Algeria\",\n      \"image\": \"img/flag-of-Algeria.png\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Andorra\",\n      \"image\": \"img/flag-of-Andorra.png\"\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Angola\",\n      \"image\": \"img/flag-of-Angola.png\"\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Antigua and Barbuda\",\n      \"image\": \"img/flag-of-Antigua.png\"\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Argentina\",\n      \"image\": \"img/flag-of-Argentina.png\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Armenia\",\n      \"image\": \"img/flag-of-Armenia.png\"\n    }\n   ]\n   \n   \n   ","function shuffle(array) {\n    const _array = array.slice(0)\n    for (let i = 0; i < array.length - 1; i++) {\n        let randomIndex = Math.floor(Math.random() * (i + 1))\n        let temp = _array[i]\n        _array[i] = _array[randomIndex]\n        _array[randomIndex] = temp\n//        _array[i] = _array[randomIndex]\n//        _array[randomIndex] = temp\n    }\n\n    return _array\n}\n\nexport default function initializeDeck(flags) {\nconsole.log('flags:', flags);\n    let id = 0\n    const cards = flags\n    .reduce((acc, type) => {\n        acc.push({\n            id: id++, \n            type\n        })\n\n        acc.push({\n            id: id++,\n            type\n        })\n        return acc\n    }, [])\n    var shuffled_cards = shuffle(cards);\n    console.log('cards:', shuffled_cards);\n    return shuffled_cards;\n\n//    return shuffle(cards)\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, {\n  useState,\n  useEffect\n} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Game from \"./components/Game\";\n//import Readme from './readme'\nimport Card from './components/card'\nimport Board from './components/board'\n//import images from '.images/'\nimport { countryFlags } from '../src/images'\nimport initializeDeck from \"./deck\"\n\n\nexport default function (App) {\n  const [cards, setCards] = useState(countryFlags)\n  const [flipped, setFlipped] = useState([])\n  const [dimension, setDimension] = useState(400)\n  const [solved, setSolved] = useState([])\n  const [disabled, setDisabled] = useState(false)\n\n  useEffect(() => {\n    resizeBoard()\n    setCards(initializeDeck(countryFlags))\n  }, [])\n\n  useEffect(() => {\n    \n    preloadImages()\n  }, cards)\n\n  useEffect(() => {\n    const resizeListener = window.addEventListener('resize', resizeBoard)\n    return () => window.removeEventListener('resize', resizeListener)\n  })\n\n  const handleClick = (id) => {\n    setDisabled(true)\n    if (flipped.length === 0) {\n      setFlipped([id])\n      setDisabled(false)\n    } else {\n      if (sameCardClicked(id))\n        return\n      setFlipped([flipped[0], id])\n      if (isMatch(id)) {\n        setSolved([...solved, flipped[0], id])\n        resetCards()\n      } else {\n        setTimeout(resetCards, 2000)\n      }\n    }\n\n  }\n\n  const preloadImages = () => {\n    console.log(\"Card: \", cards)\n    cards.map((card) => {\n\n      const src = `${card.image}`\n      console.log(src)\n      new Image().src = src\n    })\n    \n\n  }\n\n\n  const resetCards = () => {\n    setFlipped([])\n    setDisabled(false)\n  }\n\n  const sameCardClicked = (id) => flipped.includes(id)\n\n  const isMatch = (id) => {\n    const clickedCard = cards.find((card) => card.id === id)\n    const flippedCard = cards.find((card) => flipped[0] === card.id)\n    return flippedCard.type === clickedCard.type\n  }\n\n  const resizeBoard = () => {\n    setDimension(Math.min(\n      document.documentElement.clientWidth,\n      document.documentElement.clientHeight,\n    ), )\n  }\n  return ( <div>\n    <h2>Can you remember where the cards are?</h2> <Board dimension = {\n      dimension\n    }\n    cards = {\n      cards\n    }\n    flipped = {\n      flipped\n    }\n    handleClick = {\n      handleClick\n    }\n    disabled = {\n      disabled\n    }\n    solved = {\n      solved\n    }\n    /> </div>\n  )\n}"],"sourceRoot":""}